openapi: 3.0.1
info:
  title: Clinica Losacco API
  description: 'API para a parte backend da clinica'
  termsOfService: http://swagger.io/terms/
  contact:
    email: contato@clinicalosacco.com.br
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://clinicalisacco.com.br
  - url: http://clinicalisacco.com.br
tags:
  - name: medico
    description: Todas as operações que podem ser realizadas com médicos
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: atendimento
    description: Todas as operações que podem ser realizadas com atendimentos
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: paciente
    description: Todas as operações que podem ser realizadas com pacientes
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: secretaria
    description: Todas as operações que podem ser realizadas com secretarias
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /medico:
    put:
      tags:
        - medico
      summary: Atualiza um medico existente no sistema
      operationId: updateMedico
      requestBody:
        description: Medico que sera atualizado na clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medico'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Medico not found
          content: {}
        405:
          description: Validation exception
          content: {}
      #      security:
      #        - auth:
      #          - write:medicos
      #          - read:medicos
      x-codegen-request-body-name: body
    post:
      tags:
        - medico
      summary: Adiciona um novo medico na clinica
      operationId: addMedico
      requestBody:
        description: Medico que será adicionado ao sistema da clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medico'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      #      security:
      #        - auth:
      #          - write:medicos
      #          - read:medicos
      x-codegen-request-body-name: body
  /medico/{nome}:
    get:
      tags:
        - medico
      summary: Encontra medicos pelos nomes
      description: Utiliza o nome do medico para
      operationId: findMedicoByNome
      parameters:
        - name: nome
          in: path
          description: Nome a ser utilizado na pesquisa
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medico'
        400:
          description: Invalid status value
          content: {}
  #      security:
  #        - auth:
  #          - write:medicos
  #          - read:medicos
  /medico/{medicoId}:
    get:
      tags:
        - medico
      summary: Encontra um medico pelo ID
      description: Retorna apenas o medico pesquisado
      operationId: getMedicoById
      parameters:
        - name: medicoId
          in: path
          description: ID do medico
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Medico'
            application/json:
              schema:
                $ref: '#/components/schemas/Medico'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - medico
      summary: Atualiza um medico usando o id
      operationId: updateMedicoWithForm
      parameters:
        - name: medicoId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        405:
          description: Invalid input
          content: {}
    #      security:
    #        - auth:
    #          - write:medicos
    #          - read:medicos
    delete:
      tags:
        - medico
      summary: Deleta um médico
      operationId: deleteMedico
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: medicoId
          in: path
          description: ID do medico a ser deletado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
  #      security:
  #        - auth:
  #          - write:medicos
  #          - read:medicos

  /paciente:
    put:
      tags:
        - paciente
      summary: Atualiza um paciente existente no sistema
      operationId: updatePaciente
      requestBody:
        description: Paciente que sera atualizado na clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paciente'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Medico not found
          content: {}
        405:
          description: Validation exception
          content: {}
      #      security:
      #        - auth:
      #          - write:pacientes
      #          - read:pacientes
      x-codegen-request-body-name: body
    post:
      tags:
        - paciente
      summary: Adiciona um novo paciente na clinica
      operationId: addPaciente
      requestBody:
        description: Paciente que será adicionado ao sistema da clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paciente'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
  #      security:
  #        - auth:
  #          - write:pacientes
  #          - read:pacientes
  /paciente/{nome}:
    get:
      tags:
        - paciente
      summary: Encontra pacientes pelo nome
      description: Utiliza o nome do paciente para pesquisar
      operationId: findPacienteByNome
      parameters:
        - name: nome
          in: path
          description: Nome a ser utilizado na pesquisa
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paciente'
        400:
          description: Invalid status value
          content: {}
  #      security:
  #        - auth:
  #          - write:pacientes
  #          - read:pacientes
  /paciente/{pacienteId}:
    get:
      tags:
        - paciente
      summary: Encontra um paciente pelo ID
      description: Retorna apenas o paciente pesquisado
      operationId: getPacienteById
      parameters:
        - name: pacienteId
          in: path
          description: ID do paciente
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Paciente'
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - paciente
      summary: Atualiza um paciente usando o id
      operationId: updatePacienteWithForm
      parameters:
        - name: pacienteId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        405:
          description: Invalid input
          content: {}
    #      security:
    #        - auth:
    #          - write:pacientes
    #          - read:pacientes
    delete:
      tags:
        - paciente
      summary: Deleta um paciente
      operationId: pacienteMedico
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: pacienteId
          in: path
          description: ID do paciente a ser deletado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
  #      security:
  #        - auth:
  #          - write:pacientes
  #          - read:pacientes

  /atendimento:
    put:
      tags:
        - atendimento
      summary: Atualiza um atendimento existente no sistema
      operationId: updateAtendimento
      requestBody:
        description: Atendimento que sera atualizado na clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atendimento'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Medico not found
          content: {}
        405:
          description: Validation exception
          content: {}
      #      security:
      #        - auth:
      #          - write:medicos
      #          - read:medicos
      x-codegen-request-body-name: body
    post:
      tags:
        - atendimento
      summary: Adiciona um novo atendimento na clinica
      operationId: addAtendimento
      requestBody:
        description: Atendimento que será adicionado ao sistema da clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atendimento'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
  #      security:
  #        - auth:
  #          - write:atendimentos
  #          - read:atendimentos
  /atendimento/{atendimentoId}:
    get:
      tags:
        - atendimento
      summary: Encontra um atendimento pelo ID
      description: Retorna apenas o atendimento pesquisado
      operationId: getAtendimentoById
      parameters:
        - name: atendimentoId
          in: path
          description: ID do atendimento
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Atendimento'
            application/json:
              schema:
                $ref: '#/components/schemas/Atendimento'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Atendimento not found
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - atendimento
      summary: Atualiza um atendimento usando o id
      operationId: updateAtendimentoWithForm
      parameters:
        - name: atendimentoId
          in: path
          description: ID of atendimento that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        405:
          description: Invalid input
          content: {}
    #      security:
    #        - auth:
    #          - write:atendimentos
    #          - read:atendimentos
    delete:
      tags:
        - atendimento
      summary: Deleta um atendimento
      operationId: pacienteAtendimento
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: atendimentoId
          in: path
          description: ID do atendimento a ser deletado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Atendimento not found
          content: {}
  #      security:
  #        - auth:
  #          - write:atendimentos
  #          - read:atendimentos


  /secretaria:
    put:
      tags:
        - secretaria
      summary: Atualiza um secretario(a) existente no sistema
      operationId: updateSecretaria
      requestBody:
        description: Secretaria que sera atualizado na clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secretaria'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Secretaria not found
          content: {}
        405:
          description: Validation exception
          content: {}
      #      security:
      #        - auth:
      #          - write:secretarias
      #          - read:secretarias
      x-codegen-request-body-name: body
    post:
      tags:
        - secretaria
      summary: Adiciona uma nova secretaria na clinica
      operationId: addSecretaria
      requestBody:
        description: Secretaria que será adicionada ao sistema da clinica
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secretaria'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      #      security:
      #        - auth:
      #          - write:secretarias
      #          - read:secretarias
      x-codegen-request-body-name: body
  /secretaria/{nome}:
    get:
      tags:
        - secretaria
      summary: Encontra secretarias pelo nome
      description: Utiliza o nome do secretaria para pesquisar
      operationId: findSecretariaByNome
      parameters:
        - name: nome
          in: path
          description: Nome a ser utilizado na pesquisa
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paciente'
        400:
          description: Invalid status value
          content: {}
  #      security:
  #        - auth:
  #          - write:secretarias
  #          - read:secretarias
  /secretaria/{secretariaId}:
    get:
      tags:
        - secretaria
      summary: Encontra um paciente pelo ID
      description: Retorna apenas o secretaria pesquisado
      operationId: getSecretariaById
      parameters:
        - name: secretariaId
          in: path
          description: ID do secretaria
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Secretaria'
            application/json:
              schema:
                $ref: '#/components/schemas/Secretaria'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - paciente
      summary: Atualiza uma secretaria usando o id
      operationId: updateSecretariaWithForm
      parameters:
        - name: secretariaId
          in: path
          description: ID of secretaria that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        405:
          description: Invalid input
          content: {}
    #      security:
    #        - auth:
    #          - write:secretarias
    #          - read:secretarias
    delete:
      tags:
        - secretaria
      summary: Deleta um secretaria
      operationId: secretariaMedico
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: secretariaId
          in: path
          description: ID da secretaria a ser deletada
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Secretaria not found
          content: {}
#      security:
#        - auth:
#          - write:secretarias
#          - read:secretarias

components:
  schemas:
    Medico:
      type: object
      properties:
        id:
          type: integer
          format: int64
        medicoId:
          type: integer
          format: int64
        nome:
          type: string
        crm:
          type: string
        rg:
          type: string
        cpf:
          type: string
        endereco:
          $ref: '#/components/schemas/Endereco'
    Paciente:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ~pacienteId:
          type: integer
          format: int64
        nome:
          type: string
        rg:
          type: string
        cpf:
          type: string
        dataNascimento:
          type: string
          format: date
        endereco:
          $ref: '#/components/schemas/Endereco'
        planoSaude:
          $ref: '#/components/schemas/PlanoSaude'
        historico:
          type: array
          items:
            $ref: '#/components/schemas/Atendimento'
    Secretaria:
      type: object
      properties:
        id:
          type: integer
          format: int64
        secretariaId:
          type: integer
          format: int64
        nome:
          type: string
        rg:
          type: string
        cpf:
          type: string
        dataNascimento:
          type: string
          format: date
        endereco:
          $ref: '#/components/schemas/Endereco'
    Endereco:
      type: object
      properties:
        rua:
          type: string
        numero:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        UF:
          type: string
    PlanoSaude:
      type: object
      properties:
        tipo:
          type: string
        codigoIdentificacao:
          type: string
        plano:
          type: string
        cobertura:
          type: string
    Atendimento:
      type: object
      properties:
        tipo:
          type: string
        codigoIdentificacao:
          type: string
        plano:
          type: string
        cobertura:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

  securitySchemes:
    auth:
      type: http
      scheme: bearer

    api_key:
      type: apiKey
      name: api_key
      in: header
